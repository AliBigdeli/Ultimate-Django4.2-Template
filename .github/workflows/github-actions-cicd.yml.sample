# migration docs: https://docs.github.com/en/actions/migrating-to-github-actions/migrating-from-gitlab-cicd-to-github-actions
name: Django Project Test and Deploy

# define which repo to listen to for trigger
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# list of all jobs
jobs:

  # testing stage of the project
  Test:
    # declaring the name of this job
    name: Test

    # which operating system its going to use
    runs-on: ubuntu-latest

    # services dependency
    services:

      # database which django is going to interact with
      postgres:

        # database image and version/tag
        image: postgres:latest

        # environment for configuring the database
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres

        # mapping ports
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    # global environment for this job
    env: 
      DB_HOST: 127.0.0.1
    
    # steps which it will go through for test
    steps:
    
    # bringing the code and checking 
    - uses: actions/checkout@v3

    # setup python environment and version
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    
    # installing django dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # running all migrations
    - name: Run migrations
      working-directory: ./core
      run: python manage.py migrate

    # testing the project from the root directory of core
    - name: Run tests
      env:
        DJANGO_SETTINGS_MODULE: core.settings
      run: pytest .

  Deploy:
    if: ${{ always() && contains(join(needs.*.result, ','), 'success') }} 
    name: Deploy
    needs: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Connect and Execute Commands
      uses: appleboy/ssh-action@master
      with:
        username: ${{secrets.USERNAME}}
        password: ${{secrets.PASSWORD}}
        host: ${{secrets.HOST}}
        port: ${{secrets.PORT}}
        script: |
          cd ${{secrets.PROJECT_PATH}}
          docker compose -f docker-compose-stage.yml stop
          git pull
          docker compose -f docker-compose-stage.yml restart